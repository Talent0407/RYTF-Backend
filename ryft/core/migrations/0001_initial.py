# Generated by Django 4.0.7 on 2022-08-29 23:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="APICallRecordLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("client", models.CharField(max_length=50)),
                ("service", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("contract_abi", models.TextField(blank=True, null=True)),
                ("contract_address", models.CharField(max_length=100, unique=True)),
                ("supply", models.PositiveIntegerField()),
                ("mint_date", models.DateTimeField(blank=True, null=True)),
                ("mint_price_eth", models.FloatField(blank=True, null=True)),
                ("released", models.BooleanField(default=False)),
                ("verified", models.BooleanField(default=False)),
                ("dead", models.BooleanField(default=False)),
                (
                    "discord_link",
                    models.URLField(blank=True, max_length=100, null=True),
                ),
                (
                    "twitter_link",
                    models.URLField(blank=True, max_length=100, null=True),
                ),
                (
                    "website_link",
                    models.URLField(blank=True, max_length=100, null=True),
                ),
                (
                    "opensea_link",
                    models.URLField(blank=True, max_length=100, null=True),
                ),
                (
                    "num_discord_members",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "num_twitter_followers",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="collection_thumbnails/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CollectionAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField()),
                ("value", models.TextField()),
                ("occurrences", models.IntegerField(default=0)),
                (
                    "collection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attributes",
                        to="core.collection",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EthBlock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_block", models.PositiveIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("contract_address", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="EthPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("value", models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name="NFT",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(blank=True, null=True)),
                ("token_id", models.TextField()),
                ("image_url", models.TextField(blank=True, null=True)),
                ("rarity_score", models.FloatField(blank=True, null=True)),
                ("rank", models.IntegerField(blank=True, null=True)),
                ("buy_rank", models.IntegerField(blank=True, null=True)),
                ("raw_metadata", models.JSONField(blank=True, null=True)),
                ("trait_count", models.IntegerField(default=0)),
                (
                    "collection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nfts",
                        to="core.collection",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TrackedWallet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("thumbnail", models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="TrendingCollections",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("trending_by_volume", models.JSONField(blank=True, null=True)),
                ("trending_by_sales", models.JSONField(blank=True, null=True)),
                ("trending_by_price", models.JSONField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Wallet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("wallet_address", models.CharField(max_length=100, unique=True)),
                ("nfts_raw_data", models.JSONField(blank=True, null=True)),
                ("is_member", models.BooleanField(default=False)),
                ("is_beta", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=True)),
                ("processed", models.BooleanField(default=False)),
                ("thumbnail", models.TextField(blank=True, null=True)),
                ("ens_domain", models.CharField(blank=True, max_length=150, null=True)),
                ("ens_domains", models.JSONField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WalletPortfolioRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField()),
                ("portfolio_value", models.FloatField(default=0)),
                (
                    "wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wallet_portfolios",
                        to="core.wallet",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WalletNFT",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nft_raw_data", models.JSONField()),
                (
                    "nft",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.nft",
                    ),
                ),
                (
                    "wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wallet_nfts",
                        to="core.wallet",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserWhiteList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.collection",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="whitelists",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserTrackedWallet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("created_timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "tracked_wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.trackedwallet",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracked_wallets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("transaction_type", models.CharField(max_length=50)),
                (
                    "transfer_from",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "transfer_to",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "contract_address",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("token_id", models.CharField(max_length=200)),
                ("quantity", models.IntegerField(default=1)),
                (
                    "transaction_hash",
                    models.CharField(blank=True, max_length=67, null=True),
                ),
                ("block_hash", models.CharField(blank=True, max_length=200, null=True)),
                ("block_number", models.IntegerField(blank=True, default=0, null=True)),
                ("transaction_date", models.DateTimeField()),
                ("raw_transaction_data", models.JSONField(blank=True, null=True)),
                ("price_eth", models.FloatField(blank=True, null=True)),
                ("price_usd", models.FloatField(blank=True, null=True)),
                ("collection_only", models.BooleanField(default=False)),
                (
                    "nft",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nft_transactions",
                        to="core.nft",
                    ),
                ),
                (
                    "wallet",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="core.wallet",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="trackedwallet",
            name="wallet",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="core.wallet",
            ),
        ),
        migrations.CreateModel(
            name="NFTTrait",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rarity_score", models.FloatField(null=True)),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collection_traits",
                        to="core.collectionattribute",
                    ),
                ),
                (
                    "nft",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="traits",
                        to="core.nft",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CollectionMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("current_floor_price", models.FloatField(blank=True, null=True)),
                ("average_price_24hr", models.FloatField(blank=True, null=True)),
                ("average_sales_24hr", models.FloatField(blank=True, null=True)),
                ("average_volume_24hr", models.FloatField(blank=True, null=True)),
                ("listings_24hr", models.IntegerField(blank=True, null=True)),
                ("sales_24hr", models.IntegerField(blank=True, null=True)),
                ("delists_24hr", models.IntegerField(blank=True, null=True)),
                ("royalty_fee", models.FloatField(blank=True, null=True)),
                ("price_history", models.JSONField(blank=True, null=True)),
                ("owners_history", models.JSONField(blank=True, null=True)),
                ("last_fetched", models.DateTimeField()),
                (
                    "collection",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.collection",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ArtworkPreviewImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="artwork_previews/"
                    ),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="artwork_images",
                        to="core.collection",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="walletnft",
            constraint=models.UniqueConstraint(
                fields=("wallet", "nft"), name="NFT can only belong to one Wallet"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userwhitelist",
            unique_together={("user", "collection")},
        ),
        migrations.AlterUniqueTogether(
            name="usertrackedwallet",
            unique_together={("user", "tracked_wallet")},
        ),
    ]
